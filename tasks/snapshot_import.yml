- name: Check if the data context exists
  ansible.builtin.stat:
    path: "{{ node_data_dir }}/context"
  register: context_dir

- name: Check if data store exists
  ansible.builtin.stat:
    path: "{{ node_data_dir }}/store"
  register: store_dir

- name: Import the snapshot block
  when: not context_dir.stat.exists and not store_dir.stat.exists
  block:
    - name: Download the snapshot
      when: snapshot_url is regex("^https?:.*")
      # If the snapshot path is a URL, then download it
      ansible.builtin.get_url:
        url: "{{ snapshot_url }}"
        dest: "{{ snapshot_tmp_file }}"
        mode: '0444'

    - name: Copy a local snapshot
      # If the snapshot path is a unix file path, then copy it
      when: snapshot_url is regex("^\/.*")
      ansible.builtin.copy:
        src: "{{ snapshot_url }}"
        dest: "{{ snapshot_tmp_file }}"
        mode: '0444'

    - name: Import the snapshot (this can take some time)
      community.docker.docker_container:
        name: import_snapshot
        image: "{{ tezos_docker_image }}"
        interactive: true
        detach: false
        cleanup: true
        networks:
          - name: "{{ docker_network_name }}"
        volumes_from:
          - "{{ network_name }}_node_volumes"
        volumes:
          - "{{ snapshot_tmp_file }}:/data/snapshot"
        entrypoint: octez-node
        command: >
          snapshot import /data/snapshot
      register: import_out

    - name: Debug
      ansible.builtin.debug:
        msg: "Import output: {{ import_out }}"

- name: Remove the temporary snapshot file
  ansible.builtin.file:
    path: "{{ snapshot_tmp_file }}"
    state: absent
